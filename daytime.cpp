// Day time
//
// March 10, 2024
// Tetsu Nishimura

#include <Arduino.h>
#include <time.h>
#include "daytime.h"

typedef struct {
  uint16_t sunrise; // The time of sunrise in minutes
  uint16_t sunset;  // The time of sunset in ninutes
} daytime_t;

// Annual Daytime at Osaka, Japan
const daytime_t annualDaytime[] = {
	{423, 1018},
	{424, 1019},
	{424, 1019},
	{424, 1020},
	{424, 1021},
	{424, 1022},
	{424, 1023},
	{424, 1024},
	{424, 1024},
	{424, 1025},
	{424, 1026},
	{424, 1027},
	{424, 1028},
	{424, 1029},
	{423, 1030},
	{423, 1031},
	{423, 1032},
	{423, 1033},
	{422, 1034},
	{422, 1035},
	{422, 1036},
	{421, 1037},
	{421, 1038},
	{420, 1039},
	{420, 1040},
	{419, 1041},
	{419, 1042},
	{418, 1043},
	{417, 1044},
	{417, 1045},
	{416, 1046},
	{415, 1047},
	{415, 1048},
	{414, 1049},
	{413, 1050},
	{412, 1051},
	{411, 1052},
	{411, 1053},
	{410, 1054},
	{409, 1055},
	{408, 1056},
	{407, 1057},
	{406, 1058},
	{405, 1059},
	{404, 1060},
	{403, 1061},
	{402, 1061},
	{401, 1062},
	{400, 1063},
	{399, 1064},
	{398, 1065},
	{397, 1066},
	{395, 1067},
	{394, 1068},
	{393, 1069},
	{392, 1070},
	{391, 1071},
	{389, 1072},
	{388, 1072},
	{387, 1073},
	{386, 1074},
	{384, 1075},
	{383, 1076},
	{382, 1077},
	{381, 1078},
	{379, 1079},
	{378, 1079},
	{377, 1080},
	{375, 1081},
	{374, 1082},
	{373, 1083},
	{371, 1084},
	{370, 1084},
	{369, 1085},
	{367, 1086},
	{366, 1087},
	{364, 1088},
	{363, 1088},
	{362, 1089},
	{360, 1090},
	{359, 1091},
	{357, 1092},
	{356, 1092},
	{355, 1093},
	{353, 1094},
	{352, 1095},
	{350, 1096},
	{349, 1096},
	{348, 1097},
	{346, 1098},
	{345, 1099},
	{344, 1099},
	{342, 1100},
	{341, 1101},
	{339, 1102},
	{338, 1103},
	{337, 1103},
	{335, 1104},
	{334, 1105},
	{333, 1106},
	{331, 1107},
	{330, 1107},
	{329, 1108},
	{327, 1109},
	{326, 1110},
	{325, 1110},
	{324, 1111},
	{322, 1112},
	{321, 1113},
	{320, 1114},
	{319, 1114},
	{317, 1115},
	{316, 1116},
	{315, 1117},
	{314, 1118},
	{313, 1118},
	{312, 1119},
	{311, 1120},
	{309, 1121},
	{308, 1122},
	{307, 1122},
	{306, 1123},
	{305, 1124},
	{304, 1125},
	{303, 1126},
	{302, 1127},
	{301, 1127},
	{300, 1128},
	{299, 1129},
	{298, 1130},
	{298, 1131},
	{297, 1131},
	{296, 1132},
	{295, 1133},
	{294, 1134},
	{294, 1134},
	{293, 1135},
	{292, 1136},
	{291, 1137},
	{291, 1137},
	{290, 1138},
	{290, 1139},
	{289, 1140},
	{288, 1140},
	{288, 1141},
	{287, 1142},
	{287, 1142},
	{286, 1143},
	{286, 1144},
	{286, 1144},
	{285, 1145},
	{285, 1146},
	{285, 1146},
	{284, 1147},
	{284, 1148},
	{284, 1148},
	{283, 1149},
	{283, 1149},
	{283, 1150},
	{283, 1150},
	{283, 1151},
	{283, 1151},
	{283, 1152},
	{283, 1152},
	{283, 1152},
	{283, 1153},
	{283, 1153},
	{283, 1153},
	{283, 1154},
	{283, 1154},
	{283, 1154},
	{284, 1155},
	{284, 1155},
	{284, 1155},
	{284, 1155},
	{284, 1155},
	{285, 1155},
	{285, 1156},
	{285, 1156},
	{286, 1156},
	{286, 1156},
	{287, 1156},
	{287, 1156},
	{287, 1155},
	{288, 1155},
	{288, 1155},
	{289, 1155},
	{289, 1155},
	{290, 1155},
	{290, 1154},
	{291, 1154},
	{292, 1154},
	{292, 1154},
	{293, 1153},
	{293, 1153},
	{294, 1152},
	{295, 1152},
	{295, 1152},
	{296, 1151},
	{297, 1150},
	{297, 1150},
	{298, 1149},
	{299, 1149},
	{299, 1148},
	{300, 1147},
	{301, 1147},
	{301, 1146},
	{302, 1145},
	{303, 1145},
	{304, 1144},
	{304, 1143},
	{305, 1142},
	{306, 1141},
	{307, 1141},
	{307, 1140},
	{308, 1139},
	{309, 1138},
	{310, 1137},
	{310, 1136},
	{311, 1135},
	{312, 1134},
	{313, 1133},
	{313, 1132},
	{314, 1131},
	{315, 1130},
	{316, 1129},
	{316, 1127},
	{317, 1126},
	{318, 1125},
	{319, 1124},
	{319, 1123},
	{320, 1122},
	{321, 1120},
	{321, 1119},
	{322, 1118},
	{323, 1117},
	{324, 1115},
	{324, 1114},
	{325, 1113},
	{326, 1111},
	{327, 1110},
	{327, 1109},
	{328, 1107},
	{329, 1106},
	{329, 1105},
	{330, 1103},
	{331, 1102},
	{332, 1101},
	{332, 1099},
	{333, 1098},
	{334, 1096},
	{334, 1095},
	{335, 1094},
	{336, 1092},
	{337, 1091},
	{337, 1089},
	{338, 1088},
	{339, 1087},
	{339, 1085},
	{340, 1084},
	{341, 1082},
	{342, 1081},
	{342, 1079},
	{343, 1078},
	{344, 1077},
	{345, 1075},
	{345, 1074},
	{346, 1072},
	{347, 1071},
	{347, 1069},
	{348, 1068},
	{349, 1067},
	{350, 1065},
	{350, 1064},
	{351, 1062},
	{352, 1061},
	{353, 1060},
	{353, 1058},
	{354, 1057},
	{355, 1056},
	{356, 1054},
	{357, 1053},
	{357, 1052},
	{358, 1050},
	{359, 1049},
	{360, 1048},
	{361, 1046},
	{361, 1045},
	{362, 1044},
	{363, 1042},
	{364, 1041},
	{365, 1040},
	{365, 1039},
	{366, 1038},
	{367, 1036},
	{368, 1035},
	{369, 1034},
	{370, 1033},
	{371, 1032},
	{372, 1031},
	{372, 1030},
	{373, 1029},
	{374, 1028},
	{375, 1027},
	{376, 1026},
	{377, 1025},
	{378, 1024},
	{379, 1023},
	{380, 1022},
	{381, 1021},
	{382, 1020},
	{383, 1019},
	{384, 1018},
	{384, 1018},
	{385, 1017},
	{386, 1016},
	{387, 1015},
	{388, 1015},
	{389, 1014},
	{390, 1013},
	{391, 1013},
	{392, 1012},
	{393, 1012},
	{394, 1011},
	{395, 1011},
	{396, 1010},
	{397, 1010},
	{398, 1010},
	{399, 1009},
	{400, 1009},
	{401, 1009},
	{402, 1008},
	{403, 1008},
	{403, 1008},
	{404, 1008},
	{405, 1008},
	{406, 1007},
	{407, 1007},
	{408, 1007},
	{409, 1007},
	{409, 1007},
	{410, 1007},
	{411, 1008},
	{412, 1008},
	{413, 1008},
	{413, 1008},
	{414, 1008},
	{415, 1008},
	{415, 1009},
	{416, 1009},
	{417, 1009},
	{417, 1010},
	{418, 1010},
	{419, 1011},
	{419, 1011},
	{420, 1011},
	{420, 1012},
	{421, 1013},
	{421, 1013},
	{421, 1014},
	{422, 1014},
	{422, 1015},
	{422, 1016},
	{423, 1016},
	{423, 1017},
	{423, 1018},
};

bool daytime(void)
{
  bool ret;

  time_t t = time(NULL);
  struct tm *tm = localtime(&t);
  uint16_t tm_dmin = tm->tm_hour * 60 + tm->tm_min;
  const daytime_t *dt = &annualDaytime[tm->tm_yday];

  if (dt->sunrise < tm_dmin && tm_dmin < dt->sunset) {
    ret = true;
  }
  else {
    ret = false;
  }

  return ret;
}